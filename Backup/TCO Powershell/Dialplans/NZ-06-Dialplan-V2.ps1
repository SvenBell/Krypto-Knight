<#
.SYNOPSIS
A script to automatically create custom normalization rules for a Microsoft Teams Enterprise Voice deployment.

.DESCRIPTION
Automates the creation of Microsoft Teams Enterprise Voice dialplans/voice routes/policies etc. for various countries.

This script generated for Gisborne, New Zealand.

.PARAMETER OverrideAdminDomain
OPTIONAL The FQDN your Office365 tenant. Use if your admin account is not in the same domain as your tenant (ie. doesn't use a @tenantname.onmicrosoft.com address)

.PARAMETER PSTNGateway
OPTIONAL The FQDN of a PSTN gateway to apply the script to.
If a value is not provided and multiple PSTN gateways exist, script will ask during execution.

.PARAMETER DPOnly
OPTIONAL. Only create dial plan
This option is useful for when all required routes/PSTN usages already exist, and you require separate dialplans for different groups.
Command line only option.

.EXAMPLE
.\NZ-06-MSTeams.ps1
Runs the script in interactive mode. Script will prompt user for information when required.

.LINK
https://ucken.blogspot.com/2012/01/complete-guide-to-lync-optimizer.html

.NOTES
 -Works on Microsoft Teams environments with Enterprise Voice

Generated by UCDialPlans.com v.14.40 on 2021-Nov-24`r`nCopyright © 2021  Ken Lasko  Do not reproduce without permission
https://www.ucdialplans.com
https://ucken.blogspot.com
You must read and abide by the terms of service at https://www.ucdialplans.com/termsofservice.htm

To import the rules into Microsoft Teams, please save this file as a .ps1 (Powershell script). 
Run the program from Microsoft Teams Powershell by typing .\NZ-06-MSTeams.ps1. 
#>

# The below settings are for applying command line options for unattended script application
param (
	# Input the PSTN Gateway name. Only necessary if multiple PSTN gateways are assigned to a mediation pool
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $PSTNGateway,
	# Create only a dial plan. No routes/PSTN usages etc.
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[switch] $DPOnly,

	# Input the OverrideAdminDomain. Use if you normally have to enter your onmicrosoft.com domain name when signing onto O365
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $OverrideAdminDomain
)

# $ErrorActionPreference can be set to SilentlyContinue, Continue, Stop, or Inquire for troubleshooting purposes
$Error.Clear()
$ErrorActionPreference = 'SilentlyContinue'

If ((Get-PSSession | Where-Object -FilterScript {$_.ComputerName -like '*.online.lync.com' -Or $_.ComputerName -like '*.teams.microsoft.com'}).State -eq 'Opened') {
	Write-Host 'Using existing session credentials'}
Else {
	#$O365Session = New-CsOnlineSession -OverrideAdminDomain $OverrideAdminDomain
	#Import-PSSession $O365Session -AllowClobber
	Connect-MicrosoftTeams
}

# Prompt user to create either tenant-global or tenant-user dialplans.
Write-Host
$Global = New-Object System.Management.Automation.Host.ChoiceDescription '&Global','Create tenant global dial plan.'
$User = New-Object System.Management.Automation.Host.ChoiceDescription '&User','Create tenant user-level dial plan'
$Skip = New-Object System.Management.Automation.Host.ChoiceDescription '&Skip','Skip dial plan creation'
$choices = [System.Management.Automation.Host.ChoiceDescription[]]($Global,$User,$Skip)
$message = 'Create global or user-level dial plan?'
$DialPlanSelect = $Host.UI.PromptForChoice($caption,$message,$choices,1)
Write-Host
If ($DialPlanSelect -eq 1) {
	Write-Host "Creating tenant user dial plan"
	$DPParent = "NZ-06"
	New-CsTenantDialPlan $DPParent -Description "Normalization rules for Gisborne, New Zealand | Generated by UCDialPlans.com v.14.40 on 2021-Nov-24"
}
ElseIf ($DialPlanSelect -eq 0) {
	Write-Host 'Using tenant global dial plan'
	$DPParent = "Global"
}

$ExtDPParent = $DPParent

If ($DialPlanSelect -ne 2) {
	Write-Host "Creating normalization rules"
	$NR = @()
	$NR += New-CsVoiceNormalizationRule -Name "NZ-06-Local" -Parent $DPParent -Pattern '^(((86[^046])\d|(2(14[^49]|221|615|810))|(3(90[012]))|(5(625))|(7(770))|(8(241|803|887|991))|(9(27[78]|86[^9]|89[012]|200|240|291)))\d{3})$' -Translation '+646$1' -InMemory -Description "Local number normalization for Gisborne, New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-TollFree' -Parent $DPParent -Pattern '^0((508|800)\d{6,7})\d*$' -Translation '+64$1' -InMemory -Description "TollFree number normalization for New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-Premium' -Parent $DPParent -Pattern '^0(900\d{5,7})$' -Translation '+64$1' -InMemory -Description "Premium number normalization for New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-Mobile' -Parent $DPParent -Pattern '^0((2\d{7,9}))$' -Translation '+64$1' -InMemory -Description "Mobile number normalization for New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-National' -Parent $DPParent -Pattern '^0([34679][2-9]\d{6})\d*(\D+\d+)?$' -Translation '+64$1' -InMemory -Description "National number normalization for New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-Service' -Parent $DPParent -Pattern '^(01\d{1,2}|1\d{2,3})$' -Translation '$1' -InMemory -Description "Service number normalization for New Zealand"
	$NR += New-CsVoiceNormalizationRule -Name 'NZ-International' -Parent $DPParent -Pattern '^(?:\+|00)(1|7|2[07]|3[0-46]|39\d|4[013-9]|5[1-8]|6[0-6]|8[1246]|9[0-58]|2[1235689]\d|24[013-9]|242\d|3[578]\d|42\d|5[09]\d|6[789]\d|8[035789]\d|9[679]\d)(?:0)?(\d{6,14})(\D+\d+)?$' -Translation '+$1$2' -InMemory -Description "International number normalization for New Zealand"

	Set-CsTenantDialPlan -Identity $DPParent -NormalizationRules @{add=$NR}
}
