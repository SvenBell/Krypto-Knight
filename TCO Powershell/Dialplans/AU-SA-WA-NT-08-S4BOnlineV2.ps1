<#
.SYNOPSIS
A script to automatically create custom normalization rules for a Skype for Business Online Enterprise Voice deployment.

.DESCRIPTION
Automates the creation of Skype for Business Online Enterprise Voice normalization rules for various countries.

This script generated for Central and West, Australia.

.PARAMETER PSTNGateway
OPTIONAL The FQDN of a PSTN gateway to apply the script to.
If a value is not provided and multiple PSTN gateways exist, script will ask during execution.

.EXAMPLE
.\AU-SA-WA-NT-08-S4BOnline.ps1
Runs the script in interactive mode. Script will prompt user for information when required.

.LINK
https://ucken.blogspot.com/2012/01/complete-guide-to-lync-optimizer.html

.NOTES
 -Works on Skype for Business Online environments with Enterprise Voice

Generated by UCDialPlans.com v.14.20 on 2019-Jun-16`r`nCopyright © 2019  Ken Lasko  Do not reproduce without permission
https://www.ucdialplans.com
https://ucken.blogspot.com
You must read and abide by the terms of service at https://www.ucdialplans.com/termsofservice.htm

To import the rules into Skype for Business Online, please save this file as a .ps1 (Powershell script). 
Run the program from Skype for Business Online Powershell by typing .\AU-SA-WA-NT-08-S4BOnline.ps1. 
#>

# The below settings are for applying command line options for unattended script application
param (
	# Input the PSTN Gateway name. Only necessary if multiple PSTN gateways are assigned to a mediation pool
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $PSTNGateway,
	# Input the OverrideAdminDomain. Use if you normally have to enter your onmicrosoft.com domain name when signing onto O365
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $OverrideAdminDomain
)

# $ErrorActionPreference can be set to SilentlyContinue, Continue, Stop, or Inquire for troubleshooting purposes
$Error.Clear()
$ErrorActionPreference = 'SilentlyContinue'

If ((Get-PSSession).State -eq 'Opened') {
	Write-Host 'Using existing session credentials'}
else {
	$O365Session = New-CsOnlineSession -OverrideAdminDomain $OverrideAdminDomain
	Import-PSSession $O365Session -AllowClobber
}

# Prompt user to create either tenant-global or tenant-user dialplans.
Write-Host
$Global = New-Object System.Management.Automation.Host.ChoiceDescription '&Global','Create tenant global dial plan.'
$User = New-Object System.Management.Automation.Host.ChoiceDescription '&User','Create tenant user-level dial plan'
$Skip = New-Object System.Management.Automation.Host.ChoiceDescription '&Skip','Skip dial plan creation'
$choices = [System.Management.Automation.Host.ChoiceDescription[]]($Global,$User,$Skip)
$message = 'Create global or user-level dial plan?'
$DialPlanSelect = $Host.UI.PromptForChoice($caption,$message,$choices,0)
Write-Host
If ($DialPlanSelect -eq 1) {
	Write-Host "Creating tenant user dial plan"
	$DPParent = "AU-SA-WA-NT-08"
	New-CsTenantDialPlan $DPParent -Description "Normalization rules for Central and West, Australia"
}
ElseIf ($DialPlanSelect -eq 0) {
	Write-Host "Using tenant global dial plan"
	$DPParent = "Global"
}

If ($DialPlanSelect -ne 2) {
	Write-Host "Creating normalization rules"
	$NR = @()
	$NR += New-CsVoiceNormalizationRule -Name "AU-SA-WA-NT-08-Local" -Parent $DPParent -Pattern '^([2-9]\d{7})$' -Translation '+618$1' -InMemory -Description "Local number normalization for Central and West, Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-TollFree' -Parent $DPParent -Pattern '^(1[38]\d{4,8})\d*$' -Translation '+61$1' -InMemory -Description "TollFree number normalization for Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-Premium' -Parent $DPParent -Pattern '^(19\d{4,8})$' -Translation '+61$1' -InMemory -Description "Premium number normalization for Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-Mobile' -Parent $DPParent -Pattern '^0(([45]\d{8}))$' -Translation '+61$1' -InMemory -Description "Mobile number normalization for Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-National' -Parent $DPParent -Pattern '^0([23578]\d{8})\d*(\D+\d+)?$' -Translation '+61$1' -InMemory -Description "National number normalization for Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-Service' -Parent $DPParent -Pattern '^(000|1[0125]\d{1,8})$' -Translation '$1' -InMemory -Description "Service number normalization for Australia"
	$NR += New-CsVoiceNormalizationRule -Name 'AU-International' -Parent $DPParent -Pattern '^(?:\+|0011)(1|7|2[07]|3[0-46]|39\d|4[013-9]|5[1-8]|6[0-6]|8[1246]|9[0-58]|2[1235689]\d|24[013-9]|242\d|3[578]\d|42\d|5[09]\d|6[789]\d|8[035789]\d|9[679]\d)(?:0)?(\d{6,14})(\D+\d+)?$' -Translation '+$1$2' -InMemory -Description "International number normalization for Australia"

	Set-CsTenantDialPlan -Identity $DPParent -NormalizationRules @{add=$NR}
}

# Check for existence of PSTN gateways and prompt to add PSTN usages/routes
If (($PSTNGateway -eq $NULL) -or ($PSTNGateway -eq '')) {
	$PSTNGW = Get-CsOnlinePSTNGateway
	If (($PSTNGW.Identity -eq $NULL) -and ($PSTNGW.Count -eq 0)) {
		Write-Host
		Write-Host "No PSTN gateway found. If you want to configure Direct Routing, you have to define at least one PSTN gateway Using the New-CsOnlinePSTNGateway command." -ForegroundColor Yellow
		Exit
	}

# Prompt user if they want to apply PSTN usages to the Global voice policy.
	Write-Host
	$Local = New-Object System.Management.Automation.Host.ChoiceDescription '&Local','Allow Local dialing from the Global voice policy'
	$National = New-Object System.Management.Automation.Host.ChoiceDescription '&National','Allow National dialing from the Global voice policy'
	$International = New-Object System.Management.Automation.Host.ChoiceDescription '&International','Allow International dialing from the Global voice policy'
	$Skip = New-Object System.Management.Automation.Host.ChoiceDescription '&Skip','No changes to the Global voice policy'
	$choices = [System.Management.Automation.Host.ChoiceDescription[]]($Local,$National,$International,$Skip)
	$message = 'Assign PSTN usages to the Global Voice Policy?'
	$VPSelect = $Host.UI.PromptForChoice($caption,$message,$choices,2)
	Write-Host

	If ($PSTNGW.Count -gt 1) {
		$PSTNGWList = @()
		Write-Host
		Write-Host "ID    PSTN Gateway"
		Write-Host "==    ============"
		For ($i=0; $i -lt $PSTNGW.Count; $i++) {
			$a = $i + 1
			Write-Host ($a, $PSTNGW[$i].Identity) -Separator "     "
		}

		$Range = '(1-' + $PSTNGW.Count + ')'
		Write-Host
		$Select = Read-Host "Select a primary PSTN gateway to apply routes" $Range

		If (($Select -gt $PSTNGW.Count) -or ($Select -lt 1)) {
			Write-Host "Invalid selection" -ForegroundColor Red
			Exit
		}
		Else {
			$PSTNGWList += $PSTNGW[$Select-1]
		}

		$Select = Read-Host "OPTIONAL - Select a secondary PSTN gateway to apply routes (or 0 to skip)" $Range

		If (($Select -gt $PSTNGW.Count) -or ($Select -lt 0)) {
			Write-Host "Invalid selection" -ForegroundColor Red
			Exit
		}
		ElseIf ($Select -gt 0) {
			$PSTNGWList += $PSTNGW[$Select-1]
		}
	}
	Else { # There is only one PSTN gateway
		$PSTNGWList = Get-CSOnlinePSTNGateway
	}
}
Else {
	$PSTNGWList = Get-CSOnlinePSTNGateway $PSTNGateway
	If (($PSTNGWList.Identity -eq $NULL)) {
		Write-Host
		Write-Host "Could not find $PSTNGateway in the topology. Check the topology and ensure you typed the name correctly." -ForegroundColor Yellow
		Exit
	}
}

$AU_LocalList = ,"AU-SA-WA-NT-08-Local"
$AU_MobileList = ,"AU-SA-WA-NT-08-Mobile"
$AU_PremiumList = ,"AU-SA-WA-NT-08-Premium"
$AU_NationalList = ,"AU-SA-WA-NT-08-National"
$AU_InternationalList = ,"AU-SA-WA-NT-08-International"

If ((Get-CsOnlineVoiceRoutingPolicy | Where-Object {$_.Identity -notlike 'AU-SA-WA-NT-08-*'}).Count -gt 0) {
	If ($PSCmdlet.MyInvocation.BoundParameters["LeastCostRouting"].IsPresent -eq $NULL) {
		Write-Host
		$yes = New-Object System.Management.Automation.Host.ChoiceDescription '&Yes','Will configure the voice policies for least-cost/failover routing'
		$no = New-Object System.Management.Automation.Host.ChoiceDescription '&No','Will not configure the voice policies for least-cost/failover routing'
		$choices = [System.Management.Automation.Host.ChoiceDescription[]]($yes,$no)
		$message = 'Configure voice policies for least-cost/failover routing?'
		$FailoverRouting = $Host.UI.PromptForChoice($caption,$message,$choices,1)
		Write-Host
	}
	Else {
		If ($LeastCostRouting -eq $TRUE) {
			$FailoverRouting = 0
		}
		else {
			$FailoverRouting = 1
		}
	}

	If($FailoverRouting -eq 0) {
		Write-Host "Calculating least-cost/failover routing tables"

		# If user entered LCRSite list, split the string into an array
		If (($LCRSites -ne '') -and ($LCRSites -ne $NULL)) {$LCRList = $LCRSites -split ','}

		# Create Powershell lists with the words Local, Mobile, National, International in all supported languages
		$LocalLang = 'Lokal','Teghakan','Lokální','Dangdì','Lokaal','Local','Kohalik','Paikallinen','Locales','Adgilobrivi','Topiká','Lokalno','Helyi','Locali','Rokaru','Jibang-ui','Vietejs','Vietinis','Lokalen','Lokalny','Mestnyy','Miestne','Lokalni','Lokalt','Yerel','Mistsevyy','Tempatan'
		$MobileLang = 'ILëvizshëm','Ssharzhakan','Mobilní','Yídòng','Mobiel','Mobile','Mobiilne','Käsipuhelin','Mobiluri','Kinitó','Mobitel','Ponsel','Cellulari','Geitaidenwa','Mobail','Mobils','Mobilus','Mobilni','Komórkowy','Celular','Mobilnyy','Mobilné','Móvil','Medunarodni','Bimbit'
		$NationalLang = 'Kombëtar','Azgayin','Národní','Guó','National','Nationaal','Riiklik','Valtakunnallinen','Nationale','Erovnuli','Ethnikí','Nacionalni','Nemzeti','Nasional','Nazionali','Nashonaru','Guggaui','Valsts','Nacionalinis','Nacionalna','Nasjonal','Krajowy','Natsionalnyy','Celoštátna','Državni','Nationellt','Ulusal','Negara'
		$InternationalLang = 'Ndërkombëtar','Mijazgayin','Mezinárodní','GuójìDe','International','Internationaal','Rahvusvaheline','Kansainvälinen','Internationales','SaertAshoriso','Diethní','Internacionala','Nemzetközi','Internasional','Internazionali','Intanashonaru','Gugje','Starptautisks','Tarptautinis','Meg´unaroden','Internasjonal','Miedzynarodowy','Internationala','Mezhdunarodnyy','Medzinárodné','Internationellt','Uluslararasi','Mizhnarodnyy','Antarabangsa'

		If (($LCRSites -ne '') -and ($LCRSites -ne $NULL)) {
			# Create a list of all local, national and international PSTN usages for least-cost routing
			$AU_LocalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like "AU-*-Local" -and $_ -ne "AU-SA-WA-NT-08-Local" -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
			$Int_LocalList = (Get-CsOnlinePstnUsage).Usage | Where {$LocalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*' -and $_ -ne 'Local' -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}

			$AU_MobileList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-Mobile' -and $_ -ne "AU-SA-WA-NT-08-Mobile" -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
			$Int_MobileList = (Get-CsOnlinePstnUsage).Usage | Where {$MobileLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*' -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}

			$AU_PremiumList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-Premium' -and $_ -ne "AU-SA-WA-NT-08-Premium" -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
			$AU_NationalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -Like 'AU-*-National' -and $_ -ne "AU-SA-WA-NT-08-National" -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
			$Int_NationalList = (Get-CsOnlinePstnUsage).Usage | Where {$NationalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*' -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}

			$AU_InternationalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-International' -and $_ -ne "AU-SA-WA-NT-08-International" -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
			$Int_InternationalList = (Get-CsOnlinePstnUsage).Usage | Where {$InternationalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*' -and $LCRList -cmatch ($_.SubString(0,$_.Length - ($_.Length-$_.LastIndexOf('-'))))}
		}
		Else {
			# Create a list of all local, national and international PSTN usages for least-cost routing
			$AU_LocalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like "AU-*-Local" -and $_ -ne "AU-SA-WA-NT-08-Local"}
			$Int_LocalList = (Get-CsOnlinePstnUsage).Usage | Where {$LocalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*' -and $_ -ne 'Local'}
			$AU_MobileList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-Mobile' -and $_ -ne "AU-SA-WA-NT-08-Mobile"}
			$Int_MobileList = (Get-CsOnlinePstnUsage).Usage | Where {$MobileLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*'}
			$AU_PremiumList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-Premium' -and $_ -ne "AU-SA-WA-NT-08-Premium"}
			$AU_NationalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -like 'AU-*-National' -and $_ -ne "AU-SA-WA-NT-08-National"}
			$Int_NationalList = (Get-CsOnlinePstnUsage).Usage | Where {$NationalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*'}
			$AU_InternationalList += (Get-CsOnlinePstnUsage).Usage | Where-Object {$_ -Like 'AU-*-International' -and $_ -ne "AU-SA-WA-NT-08-International"}
			$Int_InternationalList = (Get-CsOnlinePstnUsage).Usage | Where {$InternationalLang -cmatch ($_.SubString($_.Length - ($_.Length-$_.LastIndexOf('-')-1),($_.Length-$_.LastIndexOf('-')-1)))+'$' -and $_ -notlike 'AU-*'}
		}
	}
}

Write-Host "Creating voice policies"
New-CsOnlineVoiceRoutingPolicy "AU-SA-WA-NT-08-Local" -Description "Allows local calls from Central and West, Australia" -WarningAction:SilentlyContinue | Out-Null

# Only create National/International policies if user did not select LocalOnly command line option
If (!$LocalOnly) {
	New-CsOnlineVoiceRoutingPolicy "AU-SA-WA-NT-08-National" -Description "Allows local/national calls from Central and West, Australia" -WarningAction:SilentlyContinue | Out-Null
	New-CsOnlineVoiceRoutingPolicy "AU-SA-WA-NT-08-International" -Description "Allows local/national/international calls from Central and West, Australia" -WarningAction:SilentlyContinue | Out-Null
}

Write-Host "Creating PSTN usages"
Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-Local"} -WarningAction:SilentlyContinue | Out-Null
Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-Service"} -WarningAction:SilentlyContinue | Out-Null

# Only create following PSTN usages if user did not select LocalOnly command line option
If (!$LocalOnly) {
	Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-National"} -WarningAction:SilentlyContinue | Out-Null
	Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-Mobile"} -WarningAction:SilentlyContinue | Out-Null
	Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-Premium"} -WarningAction:SilentlyContinue | Out-Null
	Set-CsOnlinePSTNUsage -Identity global -Usage @{Add="AU-SA-WA-NT-08-International"} -WarningAction:SilentlyContinue | Out-Null
}

Write-Host "Assigning usages to voice policies"
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-Local" -OnlinePstnUsages @{Add=$AU_LocalList} | Out-Null
If ($Int_LocalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-Local" -OnlinePstnUsages @{Add=$Int_LocalList} | Out-Null}
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-Local" -OnlinePstnUsages @{Add="AU-SA-WA-NT-08-Service"} | Out-Null
If ($AU_LocalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Replace=$AU_LocalList} | Out-Null}
Else {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages $NULL -WarningAction:SilentlyContinue | Out-Null}
If ($AU_MobileList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add=$AU_MobileList} | Out-Null}
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add=$AU_NationalList} | Out-Null
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add="AU-SA-WA-NT-08-Service"} | Out-Null
If ($Int_LocalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add=$Int_LocalList} | Out-Null}
If ($Int_MobileList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add=$Int_MobileList} | Out-Null}
If ($Int_NationalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-National" -OnlinePstnUsages @{Add=$Int_NationalList} | Out-Null}
If ($AU_LocalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Replace=$AU_LocalList} | Out-Null}
Else {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages $NULL -WarningAction:SilentlyContinue | Out-Null}
If ($AU_MobileList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$AU_MobileList} | Out-Null}
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$AU_NationalList} | Out-Null
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$AU_PremiumList} | Out-Null
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add="AU-SA-WA-NT-08-Service"} | Out-Null
If ($Int_LocalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$Int_LocalList} | Out-Null}
If ($Int_MobileList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$Int_MobileList} | Out-Null}
If ($Int_NationalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$Int_NationalList} | Out-Null}
Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$AU_InternationalList} | Out-Null
If ($Int_InternationalList -ne $NULL) {Set-CsOnlineVoiceRoutingPolicy -Identity "AU-SA-WA-NT-08-International" -OnlinePstnUsages @{Add=$Int_InternationalList} | Out-Null}

# Configure Global voice policy as per user selection above
Switch ($VPSelect) {
	0 {Set-CsOnlineVoiceRoutingPolicy -Identity Global -OnlinePstnUsages @{Replace=(Get-CsOnlineVoiceRoutingPolicy AU-SA-WA-NT-08-Local).OnlinePstnUsages} -Description "Allows local calls from Central and West, Australia"}
	1 {Set-CsOnlineVoiceRoutingPolicy -Identity Global -OnlinePstnUsages @{Replace=(Get-CsOnlineVoiceRoutingPolicy AU-SA-WA-NT-08-National).OnlinePstnUsages} -Description "Allows local/national calls from Central and West, Australia"}
	2 {Set-CsOnlineVoiceRoutingPolicy -Identity Global -OnlinePstnUsages @{Replace=(Get-CsOnlineVoiceRoutingPolicy AU-SA-WA-NT-08-International).OnlinePstnUsages} -Description "Allows local/national/international calls from Central and West, Australia"}
}


Write-Host "Creating voice routes"
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-Local" -Priority 0 -OnlinePstnUsages "AU-SA-WA-NT-08-Local" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+610?8([2-9]\d{7})' -Description "Local routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-Mobile" -Priority 2 -OnlinePstnUsages "AU-SA-WA-NT-08-Mobile" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+61([45]\d{8})$' -Description "Mobile routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-TollFree" -Priority 3 -OnlinePstnUsages "AU-SA-WA-NT-08-Local" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+611[38]\d{4,8}$' -Description "TollFree routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-Premium" -Priority 4 -OnlinePstnUsages "AU-SA-WA-NT-08-Premium" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+6119\d{4,8}$' -Description "Premium routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-National" -Priority 5 -OnlinePstnUsages "AU-SA-WA-NT-08-National" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+610?[23578]\d{8}' -Description "National routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-International" -Priority 7 -OnlinePstnUsages "AU-SA-WA-NT-08-International" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+((1[2-9]\d\d[2-9]\d{6})|((?!(61))([2-9]\d{6,14})))' -Description "International routing for Central and West, Australia" | Out-Null
New-CsOnlineVoiceRoute -Name "AU-SA-WA-NT-08-Service" -Priority 6 -OnlinePstnUsages "AU-SA-WA-NT-08-Service" -OnlinePstnGatewayList $PSTNGWList.Identity -NumberPattern '^\+?(000|1[0125]\d{1,8})$' -Description "Service routing for Central and West, Australia" | Out-Null
Write-Host "Finished!"


